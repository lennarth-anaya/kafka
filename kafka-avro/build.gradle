buildscript {
    ext {
        confluentVersion = '4.1.0'
        gradleAvroPluginVersion = '0.14.2'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:${gradleAvroPluginVersion}")
    }
}

plugins {
	// id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'org.springframework.boot' version '2.0.2.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.commercehub.gradle.plugin.avro'

group = 'org.lrth'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'

    compile('org.springframework.cloud:spring-cloud-stream')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    compile('org.springframework.kafka:spring-kafka')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-logging')
    compile('org.springframework.cloud:spring-cloud-stream-schema')

    compile("org.apache.avro:avro:1.8.2")
    compile("io.confluent:kafka-schema-registry-client:${confluentVersion}"){
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'slf4j-api')
    }
    compile("io.confluent:kafka-avro-serializer:${confluentVersion}"){
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'slf4j-api')
    }
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.9.7'
    compile('io.confluent:kafka-streams-avro-serde:5.2.2')
    
    compile 'joda-time:joda-time:2.3'
    compile('net.sf.dozer:dozer:5.5.1')


	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
}

ext {
    springCloudVersion = 'Elmhurst.RELEASE'
    // springCloudVersion = 'Finchley.SR2'
}

sourceSets.main.java.srcDirs = ['build/generated-sources/','src/main/java']

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-stream-dependencies:${springCloudVersion}"
    }
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/schemas")
    outputDir = file("build/generated-sources/")
}

compileJava.source(generateAvro.outputs)
